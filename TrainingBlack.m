function varargout = TrainingBlack(varargin)
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @TrainingBlack_OpeningFcn, ...
                   'gui_OutputFcn',  @TrainingBlack_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end


function TrainingBlack_OpeningFcn(hObject, eventdata, handles, varargin)
handles.output = hObject;
guidata(hObject, handles);


function varargout = TrainingBlack_OutputFcn(hObject, eventdata, handles) 
varargout{1} = handles.output;



function PathEdit_Callback(hObject, eventdata, handles)


function PathEdit_CreateFcn(hObject, eventdata, handles)
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

%–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –º–∞—Å—Å—Å–∏–≤ images
function addimage(images, notpreparedimages, answers, imagepath, descriptionpath, handles)
V = zeros(1, 10000);
BufBinary = zeros(1, 10000);

%–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–≤—É–º–µ—Ä–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –≤–∑—è—Ç–æ–≥–æ –∏–∑ jpg-—Ñ–∞–π–ª–∞. –ú–∞—Å—Å–∏–≤ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞
%–Ω–∞–ª–∏—á–∏–µ/–æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –±–µ–ª–æ–≥–æ —Ü–≤–µ—Ç–∞ –∫–∞–∂–¥–æ–≥–æ –ø–∏–∫—Å–µ–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
%–ü–æ—Å–ª–µ –∏–¥–µ—Ç –ø–µ—Ä–µ–≤–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è N*N –∫ —Ä–∞–∑–º–µ—Ä—É 100*100 –ø–æ –º–µ—Ç–æ–¥—É –±–ª–∏–∂–∞–π—à–µ–≥–æ —Å–æ—Å–µ–¥–∞.
MToDisplay=im2bw(imresize(imread(get(handles.PathEdit, 'String')), [100 100]), 0.5);

%–ü–µ—Ä–µ–≤–æ–¥ –º–∞—Å—Å–∏–≤–∞ –≤ –±–∏–Ω–∞—Ä–Ω—É—é –≤–µ–∫—Ç–æ—Ä-—Å—Ç—Ä–æ–∫—É –∏ –ø–æ—Å–ª–µ–¥—É—é—â–µ–µ –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
V(:,:)=reshape(MToDisplay, 1, 10000);
for m=1:1:10000
	BufBinary(1, m)=~V(1,m);
end

%–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –Ω–µ–π—Ä–æ–Ω–Ω—É—é —Å–µ—Ç—å
images(size(images, 1)+1, :) = BufBinary(1, :);
notpreparedimages(size(notpreparedimages, 1)+1, :, :)=MToDisplay;
answers(length(answers)+1)=get(handles.DescriptionEdit, 'String');
imwrite(MToDisplay, [imagepath, num2str(size(notpreparedimages, 1)), '.jpg']);
fileID = fopen([descriptionpath, num2str(length(answers)), '.txt'], 'a');
cell=answers(length(answers));
fprintf(fileID, '%s' , cell{1});
fclose(fileID);


%–ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ —ç—Ç–∞–ª–æ–Ω–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
function BrowseButton_Callback(hObject, eventdata, handles)
[FileName,PathName] = uigetfile('*.jpg','Select jpg-image');
Path = get(handles.PathEdit, 'String');
Path = [PathName, FileName];
set(handles.PathEdit, 'String', Path);


function DescriptionEdit_Callback(hObject, eventdata, handles)


function DescriptionEdit_CreateFcn(hObject, eventdata, handles)
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


%–í—ã–±–æ—Ä –±–∞–∑—ã –ø–æ—Ä—Ç—Ä–µ—Ç–æ–≤
function PortraitRadio_Callback(hObject, eventdata, handles)
if get(hObject,'Value')==0
	set(hObject,'Value', 1);
else
	set(handles.PictureRadio, 'Value', 0);
	set(handles.ECGRadio, 'Value', 0);
end

%–í—ã–±–æ—Ä –±–∞–∑—ã –∫–∞—Ä—Ç–∏–Ω
function PictureRadio_Callback(hObject, eventdata, handles)
if get(hObject,'Value')==0
	set(hObject,'Value', 1);
else
	set(handles.PortraitRadio, 'Value', 0);
	set(handles.ECGRadio, 'Value', 0);
end

%–í—ã–±–æ—Ä –±–∞–∑—ã –≠–ö–ì
function ECGRadio_Callback(hObject, eventdata, handles)
if get(hObject,'Value')==0
	set(hObject,'Value', 1);
else
	set(handles.PortraitRadio, 'Value', 0);
	set(handles.PictureRadio, 'Value', 0);
end

%–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function BackButton_Callback(hObject, eventdata, handles)
MainMenu;
hf=findobj('Name','TrainingBlack');
close(hf);

%–ó–∞–ø—É—Å–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –Ω–µ–π—Ä–æ–Ω–Ω—É—é —Å–µ—Ç—å
function OKButton_Callback(hObject, eventdata, handles)
global potrtaitimages;
global pictureimages;
global ECGimages;
global notpreparedportraitimages;
global notpreparedpictureimages;
global notpreparedECGimages;
global portraitanswers;
global pictureanswers;
global ECGanswers;

if get(handles.PortraitRadio, 'Value') == 1
	addimage(potrtaitimages, notpreparedportraitimages, portraitanswers,  'œÓÚÂÚ˚\', 'œÓÚÂÚ˚ (ÓÔËÒ‡ÌËÂ)\', handles);
else if get(handles.PictureRadio, 'Value') == 1
		addimage(pictureimages, notpreparedpictureimages, pictureanswers, ' ‡ÚËÌ˚\', ' ‡ÚËÌ˚ (ÓÔËÒ‡ÌËÂ)\', handles);
	else 
		addimage(ECGimages, notpreparedECGimages, ECGanswers, '› √\', '› √ (ÓÔËÒ‡ÌËÂ)\', handles);
	end
end

TrainingEnd;
hf=findobj('Name','TrainingBlack');
close(hf);

